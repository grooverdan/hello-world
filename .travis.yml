language: c
cache: ccache
services: docker
os:
- linux-ppc64le
- linux
sudo: false

env:
  global:
    - REPO="${DOCKER_USERNAME}"

# DOCKER_USERNAME and DOCKER_PASSWORD need to be secure environment variables either above
# or in the settings within travis.

script:
- $CC -static -Os -nostartfiles -fno-asynchronous-unwind-tables -Wno-implicit-function-declaration -o hello hello.c

after_success:
- |
   ccache --show-stats
   if [[ "$TRAVIS_EVENT_TYPE" != "pull_request" ]]; then
     docker build -t "$DOCKER_USERNAME"/hello_world_${TRAVIS_OS_NAME}:${TRAVIS_BRANCH} .
     docker images
     echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
     docker push "$REPO"/hello_world_${TRAVIS_OS_NAME}:${TRAVIS_BRANCH}
   fi

#deploy:
#  provider: script
#  script:
#  on:
#    tags: true

jobs:
  include:
    - stage: build_multi_arch_docker_image
      # only ppc64le currently has a docker new enough to support experimental manifests
      os: linux-ppc64le
      # minimise things that the stage doesn't require.
      cache: false
      before_install: true
      install: true
      script:
      - |
         if [[ "$TRAVIS_EVENT_TYPE" != "pull_request" ]]; then
           echo '{ "experimental" : "enabled" }' > ~/.docker/config.json
           echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
           MANIFEST="${REPO}/hello_world:${TRAVIS_BRANCH}"
           docker manifest create  "${MANIFEST}" "${REPO}/hello_world_linux:${TRAVIS_BRANCH}" "${REPO}/hello_world_linux-ppc64le:${TRAVIS_BRANCH}"
           docker manifest inspect "${MANIFEST}"
           docker manifest push    "${MANIFEST}"
         fi

# vim:set et ts=2 sw=2:
